#!/bin/tcsh -xef

echo "auto-generated by afni_proc.py, Thu Nov 30 17:00:08 2023"
echo "(version 7.60, August 21, 2023)"
echo "execution started: `date`"

# to execute via tcsh: 
#   tcsh -xef proc.sub-00 |& tee output.proc.sub-00
# to execute via bash: 
#   tcsh -xef proc.sub-00 2>&1 | tee output.proc.sub-00

# =========================== auto block: setup ============================
# script setup

# take note of the AFNI version
afni -ver

# check that the current AFNI version is recent enough
afni_history -check_date 14 Nov 2022
if ( $status ) then
    echo "** this script requires newer AFNI binaries (than 14 Nov 2022)"
    echo "   (consider: @update.afni.binaries -defaults)"
    exit
endif

# the user may specify a single subject to run with
if ( $#argv > 0 ) then
    set subj = $argv[1]
else
    set subj = sub-00
endif

# assign output directory name
set output_dir = $subj.results

# verify that the results directory does not yet exist
if ( -d $output_dir ) then
    echo output dir "$subj.results" already exists
    exit
endif

# set list of runs
set runs = (`count -digits 2 1 6`)

# create results and stimuli directories
mkdir -p $output_dir
mkdir $output_dir/stimuli

# copy anatomy to results dir
# while deobliquing it
3dWarp -deoblique -gridset /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/anat/${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w.nii.gz    \
 -prefix $output_dir/${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/anat/${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w.nii.gz 

# copy template to results dir (for QC)
3dcopy /opt/afni/linux_openmp_64/MNI152_2009_template_SSW.nii.gz \
    $output_dir/MNI152_2009_template_SSW.nii.gz

# ============================ auto block: tcat ============================
# apply 3dTcat to copy input dsets to results dir,
# while removing the first 6 TRs
3dTcat -prefix $output_dir/pb00.$subj.r01.tcat \
    /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/func/${subj}_task-LexDec_acq-epfid2d188_dir-COL_run-1_echo-1_bold.nii.gz'[6..$]'
3dTcat -prefix $output_dir/pb00.$subj.r02.tcat \
    /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/func/${subj}_task-LexDec_acq-epfid2d188_dir-COL_run-2_echo-1_bold.nii.gz'[6..$]'
3dTcat -prefix $output_dir/pb00.$subj.r03.tcat \
    /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/func/${subj}_task-LexDec_acq-epfid2d188_dir-COL_run-3_echo-1_bold.nii.gz'[6..$]'
3dTcat -prefix $output_dir/pb00.$subj.r04.tcat \
    /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/func/${subj}_task-LexDec_acq-epfid2d188_dir-COL_run-4_echo-1_bold.nii.gz'[6..$]'
3dTcat -prefix $output_dir/pb00.$subj.r05.tcat \
    /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/func/${subj}_task-LexDec_acq-epfid2d188_dir-COL_run-5_echo-1_bold.nii.gz'[6..$]'
3dTcat -prefix $output_dir/pb00.$subj.r06.tcat \
    /export/home/asanchez/asanchez/conceptmap/data/conceptbids/${subj}/func/${subj}_task-LexDec_acq-epfid2d188_dir-COL_run-6_echo-1_bold.nii.gz'[6..$]'

# Deoblique dataset
3dWarp -deoblique -gridset $output_dir/pb00.$subj.r01.tcat+orig -prefix $output_dir/pb00.$subj.r01.deobliq $output_dir/pb00.$subj.r01.tcat+orig 
3dWarp -deoblique -gridset $output_dir/pb00.$subj.r02.tcat+orig -prefix $output_dir/pb00.$subj.r02.deobliq $output_dir/pb00.$subj.r02.tcat+orig
3dWarp -deoblique -gridset $output_dir/pb00.$subj.r03.tcat+orig -prefix $output_dir/pb00.$subj.r03.deobliq $output_dir/pb00.$subj.r03.tcat+orig 
3dWarp -deoblique -gridset $output_dir/pb00.$subj.r04.tcat+orig -prefix $output_dir/pb00.$subj.r04.deobliq $output_dir/pb00.$subj.r04.tcat+orig 
3dWarp -deoblique -gridset $output_dir/pb00.$subj.r05.tcat+orig -prefix $output_dir/pb00.$subj.r05.deobliq $output_dir/pb00.$subj.r05.tcat+orig 
3dWarp -deoblique -gridset $output_dir/pb00.$subj.r06.tcat+orig -prefix $output_dir/pb00.$subj.r06.deobliq $output_dir/pb00.$subj.r06.tcat+orig 



# and make note of repetitions (TRs) per run
set tr_counts = ( 684 684 684 684 684 684 )

# -------------------------------------------------------
# enter the results directory (can begin processing data)
cd $output_dir


# ---------------------------------------------------------
# QC: look for columns of high variance
find_variance_lines.tcsh -polort 5 -nerode 2   \
       -rdir vlines.pb00.tcat                  \
       pb00.$subj.r*.deobliq+orig.HEAD |& tee out.vlines.pb00.tcat.txt

# ========================== auto block: outcount ==========================
# QC: compute outlier fraction for each volume
touch out.pre_ss_warn.txt
foreach run ( $runs )
    3dToutcount -automask -fraction -polort 5 -legendre                     \
                pb00.$subj.r$run.deobliq+orig > outcount.r$run.1D

    # outliers at TR 0 might suggest pre-steady state TRs
    if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
        echo "** TR #0 outliers: possible pre-steady state TRs in run $run" \
            >> out.pre_ss_warn.txt
    endif
end

# catenate outlier counts into a single time series
cat outcount.r*.1D > outcount_rall.1D

# get run number and TR index for minimum outlier volume
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       \
                          -index_to_run_tr $minindex` )
# save run and TR indices for extraction of vr_base_min_outlier
set minoutrun = $ovals[1]
set minouttr  = $ovals[2]
echo "min outlier: run $minoutrun, TR $minouttr" | tee out.min_outlier.txt

# ================================= tshift =================================
# time shift data so all slice timing is the same 
foreach run ( $runs )
    3dTshift -tzero 0 -quintic -prefix pb01.$subj.r$run.tshift \
             pb00.$subj.r$run.deobliq+orig
end

# --------------------------------
# extract volreg registration base
3dbucket -prefix vr_base_min_outlier                           \
    pb01.$subj.r$minoutrun.tshift+orig"[$minouttr]"

# ================================= align ==================================
# for e2a: compute anat alignment transformation to EPI registration base
# (new anat will be intermediate, stripped,            \
#     ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+orig)
# run (localized) uniformity correction on EPI base
3dLocalUnifize -input vr_base_min_outlier+orig -prefix \
    vr_base_min_outlier_unif

align_epi_anat.py -anat2epi -anat                      \
       ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w+orig  \
       -save_skullstrip -suffix _al_junk               \
       -epi vr_base_min_outlier_unif+orig -epi_base 0  \
       -epi_strip 3dAutomask                           \
       -cost lpc+ZZ -giant_move -check_flip            \
       -volreg off -tshift off

# ================================== tlrc ==================================
# warp anatomy to standard space (non-linear warp)
auto_warp.py -base MNI152_2009_template_SSW.nii.gz -input      \
             ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+orig \
             -skull_strip_input no

# move results up out of the awpy directory
# - NL-warped anat, affine warp, NL warp
# - use typical standard space name for anat
# - wildcard is a cheap way to go after any .gz
# - be sure NIFTI sform_code=2 means standard space
3dbucket -DAFNI_NIFTI_VIEW=tlrc                                \
         -prefix ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns  \
         awpy/${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns.aw.nii*
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .

# ================================= volreg =================================
# align each dset to base volume, to anat, warp to tlrc space

# verify that we have a +tlrc warp dataset
if ( ! -f ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc.HEAD ) then
    echo "** missing +tlrc warp dataset:                                      \
        ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc.HEAD" 
    exit
endif

# register and warp
foreach run ( $runs )
    # register each volume to the base image
    3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig                  \
             -1Dfile dfile.r$run.1D -prefix rm.epi.volreg.r$run               \
             -cubic                                                           \
             -1Dmatrix_save mat.r$run.vr.aff12.1D                             \
             pb01.$subj.r$run.tshift+orig

    # create an all-1 dataset to mask the extents of the warp
    3dcalc -overwrite -a pb01.$subj.r$run.tshift+orig -expr 1                 \
           -prefix rm.epi.all1

    # catenate volreg/epi2anat/tlrc xforms
    cat_matvec -ONELINE                                                       \
               anat.un.aff.Xat.1D                                             \
               ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_al_junk_mat.aff12.1D \
               -I                                                             \
               mat.r$run.vr.aff12.1D > mat.r$run.warp.aff12.1D

    # apply catenated xform: volreg/epi2anat/tlrc/NLtlrc
    # then apply non-linear standard-space warp
    3dNwarpApply -master ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc    \
                 -dxyz 2                                                      \
                 -source pb01.$subj.r$run.tshift+orig                         \
                 -nwarp "anat.un.aff.qw_WARP.nii mat.r$run.warp.aff12.1D"     \
                 -prefix rm.epi.nomask.r$run

    # warp the all-1 dataset for extents masking 
    3dNwarpApply -master ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc    \
                 -dxyz 2                                                      \
                 -source rm.epi.all1+orig                                     \
                 -nwarp "anat.un.aff.qw_WARP.nii mat.r$run.warp.aff12.1D"     \
                 -interp cubic                                                \
                 -ainterp NN -quiet                                           \
                 -prefix rm.epi.1.r$run

    # make an extents intersection mask of this run
    3dTstat -min -prefix rm.epi.min.r$run rm.epi.1.r$run+tlrc
end

# make a single file of registration params
cat dfile.r*.1D > dfile_rall.1D

# compute motion magnitude time series: the Euclidean norm
# (sqrt(sum squares)) of the motion parameter derivatives
1d_tool.py -infile dfile_rall.1D -set_nruns 6                                 \
           -derivative  -collapse_cols euclidean_norm                         \
           -write motion_${subj}_enorm.1D

# ----------------------------------------
# create the extents mask: mask_epi_extents+tlrc
# (this is a mask of voxels that have valid data at every TR)
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r*.HEAD 
3dcalc -a rm.epi.mean+tlrc -expr 'step(a-0.999)' -prefix mask_epi_extents

# and apply the extents mask to the EPI data 
# (delete any time series with missing data)
foreach run ( $runs )
    3dcalc -a rm.epi.nomask.r$run+tlrc -b mask_epi_extents+tlrc               \
           -expr 'a*b' -prefix pb02.$subj.r$run.volreg
end

# warp the volreg base EPI dataset to make a final version
cat_matvec -ONELINE                                                           \
           anat.un.aff.Xat.1D                                                 \
           ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_al_junk_mat.aff12.1D -I  \
           > mat.basewarp.aff12.1D

3dNwarpApply -master ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc -dxyz  \
             2                                                                \
             -source vr_base_min_outlier+orig                                 \
             -nwarp "anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D"           \
             -prefix final_epi_vr_base_min_outlier

# create an anat_final dataset, aligned with stats
3dcopy ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc anat_final.$subj

# record final registration costs
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX                \
            -input anat_final.$subj+tlrc |& tee out.allcostX.txt

# --------------------------------------
# create a TSNR dataset, just from run 1
3dTstat -mean -prefix rm.signal.vreg.r01 pb02.$subj.r01.volreg+tlrc
3dDetrend -polort 5 -prefix rm.noise.det -overwrite pb02.$subj.r01.volreg+tlrc
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
3dcalc -a rm.signal.vreg.r01+tlrc                                             \
       -b rm.noise.vreg.r01+tlrc                                              \
       -c mask_epi_extents+tlrc                                               \
       -expr 'c*a/b' -prefix TSNR.vreg.r01.$subj

# -----------------------------------------
# warp anat follower datasets (non-linear)
# warp follower dataset ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w+orig
3dNwarpApply -source ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w+orig           \
             -master anat_final.$subj+tlrc                                    \
             -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D\
             -prefix anat_w_skull_warped

# ================================== mask ==================================
# create 'full_mask' dataset (union mask)
foreach run ( $runs )
    3dAutomask -prefix rm.mask_r$run pb02.$subj.r$run.volreg+tlrc
end

# create union of inputs, output type is byte
3dmask_tool -inputs rm.mask_r*+tlrc.HEAD -union -prefix full_mask.$subj

# ---- create subject anatomy mask, mask_anat.$subj+tlrc ----
#      (resampled from tlrc anat)
3dresample -master full_mask.$subj+tlrc -input                        \
           ${subj}_acq-t1mpragesagp21isoMGH_run-1_T1w_ns+tlrc          \
           -prefix rm.resam.anat

# convert to binary anat mask; fill gaps and holes
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc  \
            -prefix mask_anat.$subj

# compute tighter EPI mask by intersecting with anat mask
3dmask_tool -input full_mask.$subj+tlrc mask_anat.$subj+tlrc          \
            -inter -prefix mask_epi_anat.$subj

# compute overlaps between anat and EPI masks
3dABoverlap -no_automask full_mask.$subj+tlrc mask_anat.$subj+tlrc    \
            |& tee out.mask_ae_overlap.txt

# note Dice coefficient of masks, as well
3ddot -dodice full_mask.$subj+tlrc mask_anat.$subj+tlrc               \
      |& tee out.mask_ae_dice.txt

# ---- create group anatomy mask, mask_group+tlrc ----
#      (resampled from tlrc base anat, MNI152_2009_template_SSW.nii.gz)
3dresample -master full_mask.$subj+tlrc -prefix ./rm.resam.group      \
           -input                                                     \
           /opt/afni/linux_openmp_64/MNI152_2009_template_SSW.nii.gz'[0]'

# convert to binary group mask; fill gaps and holes
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc \
            -prefix mask_group

# note Dice coefficient of anat and template masks
3ddot -dodice mask_anat.$subj+tlrc mask_group+tlrc                    \
      |& tee out.mask_at_dice.txt

# ================================== blur ==================================
# blur each volume of each run
foreach run ( $runs )
    3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.$subj.r$run.blur \
            pb02.$subj.r$run.volreg+tlrc
end

# ================================= scale ==================================
# scale each voxel time series to have a mean of 100
# (be sure no negatives creep in)
# (subject to a range of [0,200])
foreach run ( $runs )
    3dTstat -prefix rm.mean_r$run pb03.$subj.r$run.blur+tlrc
    3dcalc -a pb03.$subj.r$run.blur+tlrc -b rm.mean_r$run+tlrc \
           -c mask_epi_extents+tlrc                            \
           -expr 'c * min(200, a/b*100)*step(a)*step(b)'       \
           -prefix pb04.$subj.r$run.scale
end

# ========================= auto block: QC_review ==========================
# generate quality control review scripts and HTML report

# generate a review script for the unprocessed EPI data
gen_epi_review.py -script @epi_review.$subj \
    -dsets pb00.$subj.r*.deobliq+orig.HEAD

# ========================== auto block: finalize ==========================

# remove temporary files
\rm -fr rm.* awpy

# if the basic subject review script is here, run it
# (want this to be the last text output)
if ( -e @ss_review_basic ) then
    ./@ss_review_basic |& tee out.ss_review.$subj.txt

    # ** missing program 'Xvfb', skipping HTML QC

endif

# return to parent directory (just in case...)
cd ..

echo "execution finished: `date`"




# ==========================================================================
# script generated by the command:
#
# afni_proc.py -subj_id sub-00 -copy_anat                                                                                                \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/anat/sub-00_acq-t1mpragesagp21isoMGH_run-1_T1w.nii.gz                   \
#     -anat_has_skull yes -dsets                                                                                                         \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/func/sub-00_task-LexDec_acq-epfid2d188_dir-COL_run-1_echo-1_bold.nii.gz \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/func/sub-00_task-LexDec_acq-epfid2d188_dir-COL_run-2_echo-1_bold.nii.gz \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/func/sub-00_task-LexDec_acq-epfid2d188_dir-COL_run-3_echo-1_bold.nii.gz \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/func/sub-00_task-LexDec_acq-epfid2d188_dir-COL_run-4_echo-1_bold.nii.gz \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/func/sub-00_task-LexDec_acq-epfid2d188_dir-COL_run-5_echo-1_bold.nii.gz \
#     /home/asanchez/asanchez/conceptmap/data/conceptbids/sub-00/func/sub-00_task-LexDec_acq-epfid2d188_dir-COL_run-6_echo-1_bold.nii.gz \
#     -blocks tshift align tlrc volreg mask blur scale -tcat_remove_first_trs                                                            \
#     6 -align_unifize_epi local -align_opts_aea -cost lpc+ZZ -giant_move                                                                \
#     -check_flip -tlrc_base MNI152_2009_template_SSW.nii.gz -tlrc_NL_warp                                                               \
#     -volreg_align_to MIN_OUTLIER -volreg_align_e2a -volreg_tlrc_warp                                                                   \
#     -volreg_compute_tsnr yes -mask_epi_anat yes -blur_size 4.0
